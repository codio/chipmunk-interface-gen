// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v4.23.4
// source: proto/codiocmd/codiocmd_service.proto

package codiocmd

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StatusFileTransfer int32

const (
	StatusFileTransfer_SUCCESS StatusFileTransfer = 0
	StatusFileTransfer_FAIL    StatusFileTransfer = 1
)

// Enum value maps for StatusFileTransfer.
var (
	StatusFileTransfer_name = map[int32]string{
		0: "SUCCESS",
		1: "FAIL",
	}
	StatusFileTransfer_value = map[string]int32{
		"SUCCESS": 0,
		"FAIL":    1,
	}
)

func (x StatusFileTransfer) Enum() *StatusFileTransfer {
	p := new(StatusFileTransfer)
	*p = x
	return p
}

func (x StatusFileTransfer) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusFileTransfer) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_codiocmd_codiocmd_service_proto_enumTypes[0].Descriptor()
}

func (StatusFileTransfer) Type() protoreflect.EnumType {
	return &file_proto_codiocmd_codiocmd_service_proto_enumTypes[0]
}

func (x StatusFileTransfer) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusFileTransfer.Descriptor instead.
func (StatusFileTransfer) EnumDescriptor() ([]byte, []int) {
	return file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP(), []int{0}
}

type WatcherEventTypes_EventType int32

const (
	WatcherEventTypes_CREATE      WatcherEventTypes_EventType = 0
	WatcherEventTypes_WRITE       WatcherEventTypes_EventType = 1
	WatcherEventTypes_REMOVE      WatcherEventTypes_EventType = 2
	WatcherEventTypes_RENAME      WatcherEventTypes_EventType = 3
	WatcherEventTypes_CHMOD       WatcherEventTypes_EventType = 4
	WatcherEventTypes_MOVE        WatcherEventTypes_EventType = 5
	WatcherEventTypes_START_WATCH WatcherEventTypes_EventType = 6
)

// Enum value maps for WatcherEventTypes_EventType.
var (
	WatcherEventTypes_EventType_name = map[int32]string{
		0: "CREATE",
		1: "WRITE",
		2: "REMOVE",
		3: "RENAME",
		4: "CHMOD",
		5: "MOVE",
		6: "START_WATCH",
	}
	WatcherEventTypes_EventType_value = map[string]int32{
		"CREATE":      0,
		"WRITE":       1,
		"REMOVE":      2,
		"RENAME":      3,
		"CHMOD":       4,
		"MOVE":        5,
		"START_WATCH": 6,
	}
)

func (x WatcherEventTypes_EventType) Enum() *WatcherEventTypes_EventType {
	p := new(WatcherEventTypes_EventType)
	*p = x
	return p
}

func (x WatcherEventTypes_EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WatcherEventTypes_EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_codiocmd_codiocmd_service_proto_enumTypes[1].Descriptor()
}

func (WatcherEventTypes_EventType) Type() protoreflect.EnumType {
	return &file_proto_codiocmd_codiocmd_service_proto_enumTypes[1]
}

func (x WatcherEventTypes_EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WatcherEventTypes_EventType.Descriptor instead.
func (WatcherEventTypes_EventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP(), []int{16, 0}
}

type MetaData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Size          uint32                 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	ModTimeNano   int64                  `protobuf:"varint,3,opt,name=mod_time_nano,json=modTimeNano,proto3" json:"mod_time_nano,omitempty"`
	IsSynced      bool                   `protobuf:"varint,4,opt,name=is_synced,json=isSynced,proto3" json:"is_synced,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetaData) Reset() {
	*x = MetaData{}
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaData) ProtoMessage() {}

func (x *MetaData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaData.ProtoReflect.Descriptor instead.
func (*MetaData) Descriptor() ([]byte, []int) {
	return file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP(), []int{0}
}

func (x *MetaData) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MetaData) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *MetaData) GetModTimeNano() int64 {
	if x != nil {
		return x.ModTimeNano
	}
	return 0
}

func (x *MetaData) GetIsSynced() bool {
	if x != nil {
		return x.IsSynced
	}
	return false
}

type FileUploadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*FileUploadRequest_Metadata
	//	*FileUploadRequest_ChunkData
	Request       isFileUploadRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileUploadRequest) Reset() {
	*x = FileUploadRequest{}
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadRequest) ProtoMessage() {}

func (x *FileUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadRequest.ProtoReflect.Descriptor instead.
func (*FileUploadRequest) Descriptor() ([]byte, []int) {
	return file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP(), []int{1}
}

func (x *FileUploadRequest) GetRequest() isFileUploadRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *FileUploadRequest) GetMetadata() *MetaData {
	if x != nil {
		if x, ok := x.Request.(*FileUploadRequest_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *FileUploadRequest) GetChunkData() []byte {
	if x != nil {
		if x, ok := x.Request.(*FileUploadRequest_ChunkData); ok {
			return x.ChunkData
		}
	}
	return nil
}

type isFileUploadRequest_Request interface {
	isFileUploadRequest_Request()
}

type FileUploadRequest_Metadata struct {
	Metadata *MetaData `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type FileUploadRequest_ChunkData struct {
	ChunkData []byte `protobuf:"bytes,2,opt,name=chunk_data,json=chunkData,proto3,oneof"`
}

func (*FileUploadRequest_Metadata) isFileUploadRequest_Request() {}

func (*FileUploadRequest_ChunkData) isFileUploadRequest_Request() {}

type FileUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        StatusFileTransfer     `protobuf:"varint,1,opt,name=status,proto3,enum=com.codio.chipmunk.proto.codiocmd.StatusFileTransfer" json:"status,omitempty"`
	ErrMsg        string                 `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileUploadResponse) Reset() {
	*x = FileUploadResponse{}
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadResponse) ProtoMessage() {}

func (x *FileUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadResponse.ProtoReflect.Descriptor instead.
func (*FileUploadResponse) Descriptor() ([]byte, []int) {
	return file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP(), []int{2}
}

func (x *FileUploadResponse) GetStatus() StatusFileTransfer {
	if x != nil {
		return x.Status
	}
	return StatusFileTransfer_SUCCESS
}

func (x *FileUploadResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type FileDownloadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileDownloadRequest) Reset() {
	*x = FileDownloadRequest{}
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadRequest) ProtoMessage() {}

func (x *FileDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadRequest.ProtoReflect.Descriptor instead.
func (*FileDownloadRequest) Descriptor() ([]byte, []int) {
	return file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP(), []int{3}
}

func (x *FileDownloadRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type FileDownloadResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*FileDownloadResponse_Metadata
	//	*FileDownloadResponse_ChunkData
	Request       isFileDownloadResponse_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileDownloadResponse) Reset() {
	*x = FileDownloadResponse{}
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadResponse) ProtoMessage() {}

func (x *FileDownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadResponse.ProtoReflect.Descriptor instead.
func (*FileDownloadResponse) Descriptor() ([]byte, []int) {
	return file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP(), []int{4}
}

func (x *FileDownloadResponse) GetRequest() isFileDownloadResponse_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *FileDownloadResponse) GetMetadata() *MetaData {
	if x != nil {
		if x, ok := x.Request.(*FileDownloadResponse_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *FileDownloadResponse) GetChunkData() []byte {
	if x != nil {
		if x, ok := x.Request.(*FileDownloadResponse_ChunkData); ok {
			return x.ChunkData
		}
	}
	return nil
}

type isFileDownloadResponse_Request interface {
	isFileDownloadResponse_Request()
}

type FileDownloadResponse_Metadata struct {
	Metadata *MetaData `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type FileDownloadResponse_ChunkData struct {
	ChunkData []byte `protobuf:"bytes,2,opt,name=chunk_data,json=chunkData,proto3,oneof"`
}

func (*FileDownloadResponse_Metadata) isFileDownloadResponse_Request() {}

func (*FileDownloadResponse_ChunkData) isFileDownloadResponse_Request() {}

type ExecRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cmd           string                 `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Args          []string               `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecRequest) Reset() {
	*x = ExecRequest{}
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecRequest) ProtoMessage() {}

func (x *ExecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecRequest.ProtoReflect.Descriptor instead.
func (*ExecRequest) Descriptor() ([]byte, []int) {
	return file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP(), []int{5}
}

func (x *ExecRequest) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *ExecRequest) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

type ExecResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Out           string                 `protobuf:"bytes,2,opt,name=out,proto3" json:"out,omitempty"`
	Err           string                 `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecResponse) Reset() {
	*x = ExecResponse{}
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecResponse) ProtoMessage() {}

func (x *ExecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecResponse.ProtoReflect.Descriptor instead.
func (*ExecResponse) Descriptor() ([]byte, []int) {
	return file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP(), []int{6}
}

func (x *ExecResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ExecResponse) GetOut() string {
	if x != nil {
		return x.Out
	}
	return ""
}

func (x *ExecResponse) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type ExecAsyncRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cmd           string                 `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Args          []string               `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecAsyncRequest) Reset() {
	*x = ExecAsyncRequest{}
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecAsyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecAsyncRequest) ProtoMessage() {}

func (x *ExecAsyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecAsyncRequest.ProtoReflect.Descriptor instead.
func (*ExecAsyncRequest) Descriptor() ([]byte, []int) {
	return file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP(), []int{7}
}

func (x *ExecAsyncRequest) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *ExecAsyncRequest) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

type ExecAsyncResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	ErrMsg        string                 `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecAsyncResponse) Reset() {
	*x = ExecAsyncResponse{}
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecAsyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecAsyncResponse) ProtoMessage() {}

func (x *ExecAsyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecAsyncResponse.ProtoReflect.Descriptor instead.
func (*ExecAsyncResponse) Descriptor() ([]byte, []int) {
	return file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP(), []int{8}
}

func (x *ExecAsyncResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ExecAsyncResponse) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP(), []int{9}
}

func (x *PingRequest) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type PingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP(), []int{10}
}

func (x *PingResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetVMHostNameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVMHostNameRequest) Reset() {
	*x = GetVMHostNameRequest{}
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVMHostNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVMHostNameRequest) ProtoMessage() {}

func (x *GetVMHostNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVMHostNameRequest.ProtoReflect.Descriptor instead.
func (*GetVMHostNameRequest) Descriptor() ([]byte, []int) {
	return file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP(), []int{11}
}

type GetVMHostNameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HostName      string                 `protobuf:"bytes,1,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVMHostNameResponse) Reset() {
	*x = GetVMHostNameResponse{}
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVMHostNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVMHostNameResponse) ProtoMessage() {}

func (x *GetVMHostNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVMHostNameResponse.ProtoReflect.Descriptor instead.
func (*GetVMHostNameResponse) Descriptor() ([]byte, []int) {
	return file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetVMHostNameResponse) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

type GetRemoteFileListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRemoteFileListRequest) Reset() {
	*x = GetRemoteFileListRequest{}
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRemoteFileListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRemoteFileListRequest) ProtoMessage() {}

func (x *GetRemoteFileListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRemoteFileListRequest.ProtoReflect.Descriptor instead.
func (*GetRemoteFileListRequest) Descriptor() ([]byte, []int) {
	return file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetRemoteFileListRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GetRemoteFileListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	ModTimeNano   int64                  `protobuf:"varint,2,opt,name=mod_time_nano,json=modTimeNano,proto3" json:"mod_time_nano,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRemoteFileListResponse) Reset() {
	*x = GetRemoteFileListResponse{}
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRemoteFileListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRemoteFileListResponse) ProtoMessage() {}

func (x *GetRemoteFileListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRemoteFileListResponse.ProtoReflect.Descriptor instead.
func (*GetRemoteFileListResponse) Descriptor() ([]byte, []int) {
	return file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetRemoteFileListResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetRemoteFileListResponse) GetModTimeNano() int64 {
	if x != nil {
		return x.ModTimeNano
	}
	return 0
}

type FileWatcherEvent struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	EventType     WatcherEventTypes_EventType `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=com.codio.chipmunk.proto.codiocmd.WatcherEventTypes_EventType" json:"event_type,omitempty"`
	Path          string                      `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	OldPath       string                      `protobuf:"bytes,3,opt,name=old_path,json=oldPath,proto3" json:"old_path,omitempty"`
	IsDir         bool                        `protobuf:"varint,4,opt,name=is_dir,json=isDir,proto3" json:"is_dir,omitempty"`
	ModTimeNano   int64                       `protobuf:"varint,5,opt,name=mod_time_nano,json=modTimeNano,proto3" json:"mod_time_nano,omitempty"`
	FileMode      uint32                      `protobuf:"varint,6,opt,name=file_mode,json=fileMode,proto3" json:"file_mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileWatcherEvent) Reset() {
	*x = FileWatcherEvent{}
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileWatcherEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileWatcherEvent) ProtoMessage() {}

func (x *FileWatcherEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileWatcherEvent.ProtoReflect.Descriptor instead.
func (*FileWatcherEvent) Descriptor() ([]byte, []int) {
	return file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP(), []int{15}
}

func (x *FileWatcherEvent) GetEventType() WatcherEventTypes_EventType {
	if x != nil {
		return x.EventType
	}
	return WatcherEventTypes_CREATE
}

func (x *FileWatcherEvent) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileWatcherEvent) GetOldPath() string {
	if x != nil {
		return x.OldPath
	}
	return ""
}

func (x *FileWatcherEvent) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

func (x *FileWatcherEvent) GetModTimeNano() int64 {
	if x != nil {
		return x.ModTimeNano
	}
	return 0
}

func (x *FileWatcherEvent) GetFileMode() uint32 {
	if x != nil {
		return x.FileMode
	}
	return 0
}

type WatcherEventTypes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatcherEventTypes) Reset() {
	*x = WatcherEventTypes{}
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatcherEventTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatcherEventTypes) ProtoMessage() {}

func (x *WatcherEventTypes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatcherEventTypes.ProtoReflect.Descriptor instead.
func (*WatcherEventTypes) Descriptor() ([]byte, []int) {
	return file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP(), []int{16}
}

type GetReusableTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReusableTokenRequest) Reset() {
	*x = GetReusableTokenRequest{}
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReusableTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReusableTokenRequest) ProtoMessage() {}

func (x *GetReusableTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReusableTokenRequest.ProtoReflect.Descriptor instead.
func (*GetReusableTokenRequest) Descriptor() ([]byte, []int) {
	return file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP(), []int{17}
}

type GetReusableTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReusableTokenResponse) Reset() {
	*x = GetReusableTokenResponse{}
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReusableTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReusableTokenResponse) ProtoMessage() {}

func (x *GetReusableTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_codiocmd_codiocmd_service_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReusableTokenResponse.ProtoReflect.Descriptor instead.
func (*GetReusableTokenResponse) Descriptor() ([]byte, []int) {
	return file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetReusableTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

var File_proto_codiocmd_codiocmd_service_proto protoreflect.FileDescriptor

var file_proto_codiocmd_codiocmd_service_proto_rawDesc = []byte{
	0x0a, 0x25, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x63, 0x6d, 0x64,
	0x2f, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x63, 0x6d, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x64,
	0x69, 0x6f, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x63, 0x6d, 0x64, 0x22, 0x73, 0x0a, 0x08, 0x4d, 0x65,
	0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x22,
	0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x4e, 0x61,
	0x6e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x53, 0x79, 0x6e, 0x63, 0x65, 0x64, 0x22,
	0x8a, 0x01, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x64, 0x69, 0x6f, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x63, 0x6d, 0x64, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1f, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7c, 0x0a, 0x12,
	0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x2e, 0x63,
	0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f,
	0x64, 0x69, 0x6f, 0x63, 0x6d, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x69, 0x6c,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x29, 0x0a, 0x13, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x8d, 0x01, 0x0a, 0x14, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x2e, 0x63, 0x68, 0x69,
	0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x69,
	0x6f, 0x63, 0x6d, 0x64, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0a, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52,
	0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x33, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x42, 0x0a, 0x0c, 0x45, 0x78,
	0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x75,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x75, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x38,
	0x0a, 0x10, 0x45, 0x78, 0x65, 0x63, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x6d, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x3c, 0x0a, 0x11, 0x45, 0x78, 0x65, 0x63,
	0x41, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x17, 0x0a,
	0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x1f, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x20, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x56, 0x4d, 0x48, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x34, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x56, 0x4d, 0x48, 0x6f, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x53, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x6d, 0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x4e, 0x61, 0x6e, 0x6f, 0x22, 0xf8, 0x01, 0x0a,
	0x10, 0x46, 0x69, 0x6c, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x5d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x69,
	0x6f, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x63, 0x6d, 0x64, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x44, 0x69, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x6f, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d,
	0x6f, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x4e, 0x61, 0x6e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x75, 0x0a, 0x11, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x60, 0x0a, 0x09,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06,
	0x52, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x48, 0x4d, 0x4f,
	0x44, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x05, 0x12, 0x0f, 0x0a,
	0x0b, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x57, 0x41, 0x54, 0x43, 0x48, 0x10, 0x06, 0x22, 0x19,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x30, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2a, 0x2b, 0x0a, 0x12, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x32, 0xf5, 0x08, 0x0a, 0x08, 0x43, 0x6f, 0x64,
	0x69, 0x6f, 0x43, 0x6d, 0x64, 0x12, 0x7b, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x2e,
	0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6f, 0x64, 0x69, 0x6f, 0x63, 0x6d, 0x64, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x64, 0x69, 0x6f, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x63, 0x6d, 0x64, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x28, 0x01, 0x12, 0x81, 0x01, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x2e,
	0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6f, 0x64, 0x69, 0x6f, 0x63, 0x6d, 0x64, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x63, 0x6d, 0x64, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x67, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x2e,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d,
	0x75, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x63,
	0x6d, 0x64, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d,
	0x75, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x63,
	0x6d, 0x64, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x76, 0x0a, 0x09, 0x45, 0x78, 0x65, 0x63, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x33, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e,
	0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x63, 0x6d, 0x64,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x2e, 0x63, 0x68,
	0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x64,
	0x69, 0x6f, 0x63, 0x6d, 0x64, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12,
	0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x2e, 0x63, 0x68, 0x69, 0x70,
	0x6d, 0x75, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f,
	0x63, 0x6d, 0x64, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x2e, 0x63, 0x68, 0x69, 0x70,
	0x6d, 0x75, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f,
	0x63, 0x6d, 0x64, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x82, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x56, 0x4d, 0x48, 0x6f, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x37, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x2e, 0x63,
	0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f,
	0x64, 0x69, 0x6f, 0x63, 0x6d, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x4d, 0x48, 0x6f, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x63, 0x6d, 0x64, 0x2e,
	0x47, 0x65, 0x74, 0x56, 0x4d, 0x48, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x90, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x63, 0x6d, 0x64, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63,
	0x6f, 0x64, 0x69, 0x6f, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x63, 0x6d, 0x64, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x78, 0x0a, 0x08, 0x53, 0x79, 0x6e, 0x63,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f,
	0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x6f, 0x64, 0x69, 0x6f, 0x63, 0x6d, 0x64, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x63, 0x6f, 0x64, 0x69, 0x6f, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x63, 0x6d, 0x64, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x28, 0x01,
	0x30, 0x01, 0x12, 0x8b, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x75, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x64, 0x69, 0x6f, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x63, 0x6d, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x2e,
	0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6f, 0x64, 0x69, 0x6f, 0x63, 0x6d, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x75, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6f, 0x64, 0x69, 0x6f, 0x2f, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x2d, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2d, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x63, 0x6f, 0x64, 0x69, 0x6f, 0x63, 0x6d, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_codiocmd_codiocmd_service_proto_rawDescOnce sync.Once
	file_proto_codiocmd_codiocmd_service_proto_rawDescData = file_proto_codiocmd_codiocmd_service_proto_rawDesc
)

func file_proto_codiocmd_codiocmd_service_proto_rawDescGZIP() []byte {
	file_proto_codiocmd_codiocmd_service_proto_rawDescOnce.Do(func() {
		file_proto_codiocmd_codiocmd_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_codiocmd_codiocmd_service_proto_rawDescData)
	})
	return file_proto_codiocmd_codiocmd_service_proto_rawDescData
}

var file_proto_codiocmd_codiocmd_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_codiocmd_codiocmd_service_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_proto_codiocmd_codiocmd_service_proto_goTypes = []any{
	(StatusFileTransfer)(0),           // 0: com.codio.chipmunk.proto.codiocmd.StatusFileTransfer
	(WatcherEventTypes_EventType)(0),  // 1: com.codio.chipmunk.proto.codiocmd.WatcherEventTypes.EventType
	(*MetaData)(nil),                  // 2: com.codio.chipmunk.proto.codiocmd.MetaData
	(*FileUploadRequest)(nil),         // 3: com.codio.chipmunk.proto.codiocmd.FileUploadRequest
	(*FileUploadResponse)(nil),        // 4: com.codio.chipmunk.proto.codiocmd.FileUploadResponse
	(*FileDownloadRequest)(nil),       // 5: com.codio.chipmunk.proto.codiocmd.FileDownloadRequest
	(*FileDownloadResponse)(nil),      // 6: com.codio.chipmunk.proto.codiocmd.FileDownloadResponse
	(*ExecRequest)(nil),               // 7: com.codio.chipmunk.proto.codiocmd.ExecRequest
	(*ExecResponse)(nil),              // 8: com.codio.chipmunk.proto.codiocmd.ExecResponse
	(*ExecAsyncRequest)(nil),          // 9: com.codio.chipmunk.proto.codiocmd.ExecAsyncRequest
	(*ExecAsyncResponse)(nil),         // 10: com.codio.chipmunk.proto.codiocmd.ExecAsyncResponse
	(*PingRequest)(nil),               // 11: com.codio.chipmunk.proto.codiocmd.PingRequest
	(*PingResponse)(nil),              // 12: com.codio.chipmunk.proto.codiocmd.PingResponse
	(*GetVMHostNameRequest)(nil),      // 13: com.codio.chipmunk.proto.codiocmd.GetVMHostNameRequest
	(*GetVMHostNameResponse)(nil),     // 14: com.codio.chipmunk.proto.codiocmd.GetVMHostNameResponse
	(*GetRemoteFileListRequest)(nil),  // 15: com.codio.chipmunk.proto.codiocmd.GetRemoteFileListRequest
	(*GetRemoteFileListResponse)(nil), // 16: com.codio.chipmunk.proto.codiocmd.GetRemoteFileListResponse
	(*FileWatcherEvent)(nil),          // 17: com.codio.chipmunk.proto.codiocmd.FileWatcherEvent
	(*WatcherEventTypes)(nil),         // 18: com.codio.chipmunk.proto.codiocmd.WatcherEventTypes
	(*GetReusableTokenRequest)(nil),   // 19: com.codio.chipmunk.proto.codiocmd.GetReusableTokenRequest
	(*GetReusableTokenResponse)(nil),  // 20: com.codio.chipmunk.proto.codiocmd.GetReusableTokenResponse
}
var file_proto_codiocmd_codiocmd_service_proto_depIdxs = []int32{
	2,  // 0: com.codio.chipmunk.proto.codiocmd.FileUploadRequest.metadata:type_name -> com.codio.chipmunk.proto.codiocmd.MetaData
	0,  // 1: com.codio.chipmunk.proto.codiocmd.FileUploadResponse.status:type_name -> com.codio.chipmunk.proto.codiocmd.StatusFileTransfer
	2,  // 2: com.codio.chipmunk.proto.codiocmd.FileDownloadResponse.metadata:type_name -> com.codio.chipmunk.proto.codiocmd.MetaData
	1,  // 3: com.codio.chipmunk.proto.codiocmd.FileWatcherEvent.event_type:type_name -> com.codio.chipmunk.proto.codiocmd.WatcherEventTypes.EventType
	3,  // 4: com.codio.chipmunk.proto.codiocmd.CodioCmd.FileUpload:input_type -> com.codio.chipmunk.proto.codiocmd.FileUploadRequest
	5,  // 5: com.codio.chipmunk.proto.codiocmd.CodioCmd.FileDownload:input_type -> com.codio.chipmunk.proto.codiocmd.FileDownloadRequest
	7,  // 6: com.codio.chipmunk.proto.codiocmd.CodioCmd.Exec:input_type -> com.codio.chipmunk.proto.codiocmd.ExecRequest
	9,  // 7: com.codio.chipmunk.proto.codiocmd.CodioCmd.ExecAsync:input_type -> com.codio.chipmunk.proto.codiocmd.ExecAsyncRequest
	11, // 8: com.codio.chipmunk.proto.codiocmd.CodioCmd.Ping:input_type -> com.codio.chipmunk.proto.codiocmd.PingRequest
	13, // 9: com.codio.chipmunk.proto.codiocmd.CodioCmd.GetVMHostName:input_type -> com.codio.chipmunk.proto.codiocmd.GetVMHostNameRequest
	15, // 10: com.codio.chipmunk.proto.codiocmd.CodioCmd.GetRemoteFileList:input_type -> com.codio.chipmunk.proto.codiocmd.GetRemoteFileListRequest
	17, // 11: com.codio.chipmunk.proto.codiocmd.CodioCmd.SyncPath:input_type -> com.codio.chipmunk.proto.codiocmd.FileWatcherEvent
	19, // 12: com.codio.chipmunk.proto.codiocmd.CodioCmd.GetReusableToken:input_type -> com.codio.chipmunk.proto.codiocmd.GetReusableTokenRequest
	4,  // 13: com.codio.chipmunk.proto.codiocmd.CodioCmd.FileUpload:output_type -> com.codio.chipmunk.proto.codiocmd.FileUploadResponse
	6,  // 14: com.codio.chipmunk.proto.codiocmd.CodioCmd.FileDownload:output_type -> com.codio.chipmunk.proto.codiocmd.FileDownloadResponse
	8,  // 15: com.codio.chipmunk.proto.codiocmd.CodioCmd.Exec:output_type -> com.codio.chipmunk.proto.codiocmd.ExecResponse
	10, // 16: com.codio.chipmunk.proto.codiocmd.CodioCmd.ExecAsync:output_type -> com.codio.chipmunk.proto.codiocmd.ExecAsyncResponse
	12, // 17: com.codio.chipmunk.proto.codiocmd.CodioCmd.Ping:output_type -> com.codio.chipmunk.proto.codiocmd.PingResponse
	14, // 18: com.codio.chipmunk.proto.codiocmd.CodioCmd.GetVMHostName:output_type -> com.codio.chipmunk.proto.codiocmd.GetVMHostNameResponse
	16, // 19: com.codio.chipmunk.proto.codiocmd.CodioCmd.GetRemoteFileList:output_type -> com.codio.chipmunk.proto.codiocmd.GetRemoteFileListResponse
	17, // 20: com.codio.chipmunk.proto.codiocmd.CodioCmd.SyncPath:output_type -> com.codio.chipmunk.proto.codiocmd.FileWatcherEvent
	20, // 21: com.codio.chipmunk.proto.codiocmd.CodioCmd.GetReusableToken:output_type -> com.codio.chipmunk.proto.codiocmd.GetReusableTokenResponse
	13, // [13:22] is the sub-list for method output_type
	4,  // [4:13] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_proto_codiocmd_codiocmd_service_proto_init() }
func file_proto_codiocmd_codiocmd_service_proto_init() {
	if File_proto_codiocmd_codiocmd_service_proto != nil {
		return
	}
	file_proto_codiocmd_codiocmd_service_proto_msgTypes[1].OneofWrappers = []any{
		(*FileUploadRequest_Metadata)(nil),
		(*FileUploadRequest_ChunkData)(nil),
	}
	file_proto_codiocmd_codiocmd_service_proto_msgTypes[4].OneofWrappers = []any{
		(*FileDownloadResponse_Metadata)(nil),
		(*FileDownloadResponse_ChunkData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_codiocmd_codiocmd_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_codiocmd_codiocmd_service_proto_goTypes,
		DependencyIndexes: file_proto_codiocmd_codiocmd_service_proto_depIdxs,
		EnumInfos:         file_proto_codiocmd_codiocmd_service_proto_enumTypes,
		MessageInfos:      file_proto_codiocmd_codiocmd_service_proto_msgTypes,
	}.Build()
	File_proto_codiocmd_codiocmd_service_proto = out.File
	file_proto_codiocmd_codiocmd_service_proto_rawDesc = nil
	file_proto_codiocmd_codiocmd_service_proto_goTypes = nil
	file_proto_codiocmd_codiocmd_service_proto_depIdxs = nil
}
